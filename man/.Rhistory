coordinates(m4m) = ~x+y
proj4string(m4m) <- CRS("+init=epsg:28992")
# Creating the mesh
mesh.coor <- inla.mesh.2d(loc = coordinates(m4m),
max.edge = c(250, 500),
offset = c(250, 250),
n=c(32, 32))
plot(mesh.coor, xlab="Using coordinates")
points(coordinates(m4m), col="blue" )
# Creating the mesh
mesh.coor <- inla.mesh.2d(loc = coordinates(m4m),
max.edge = c(250, 500),
offset = c(125, 250),
n=c(32, 32))
plot(mesh.coor, xlab="Using coordinates")
points(coordinates(m4m), col="blue" )
# Creating the mesh
mesh.coor <- inla.mesh.2d(loc = coordinates(m4m),
max.edge = c(250, 500),
offset = c(250, 500),
n=c(32, 32))
plot(mesh.coor, xlab="Using coordinates")
points(coordinates(m4m), col="blue" )
cbind
cbind(c(1, 2, 3), NA, NA)
cbind(c(1, 2, 3), NA, NA, NA)
#Loading necessary packages
library(sp)
library(INLA)
library(maptools)
library(spatstat)
library(rgeos)
library(RColorBrewer)
library(ggmap)
library(rgdal)
library(gstat)
# Loading the data
data(meuse); str(meuse)
# Selecting the four the metals (cadmium, cooper, lead and zinc) and
# the coordinates of the measurements.
m4m <- meuse[, c(1, 2, 3, 4, 5, 6)]; rm(meuse); str(m4m)
# Creating the spatial object
coordinates(m4m) = ~x+y
proj4string(m4m) <- CRS("+init=epsg:28992")
# Creating the mesh
mesh.coor <- inla.mesh.2d(loc = coordinates(m4m),
max.edge = c(250, 500),
offset = c(250, 500),
n=c(32, 32))
plot(mesh.coor, xlab="Using coordinates")
points(coordinates(m4m), col="blue" )
# Number of vertices (nodes) of the mesh
nv <- mesh.coor$n
# Create spde model object
spde <- inla.spde2.matern(mesh = mesh.coor, alpha=2, constr = TRUE)
# Creating the index for the spatial effects
s.index1 <- inla.spde.make.index(name = "spatial.field1", n.spde = spde$n.spde)
s.index2 <- inla.spde.make.index(name = "spatial.field2", n.spde = spde$n.spde)
s.index3 <- inla.spde.make.index(name = "spatial.field3", n.spde = spde$n.spde)
s.index4 <- inla.spde.make.index(name = "spatial.field4", n.spde = spde$n.spde)
# Creating the projector matrix
A.m <- inla.spde.make.A(mesh= mesh.coor, loc = coordinates(m4m))
# Preparing the stack data
y1 <- m4m@data["cadmium"]; names(y1) <- "y.1"
y2 <- m4m@data["copper"]; names(y2) <- "y.2"
y3 <- m4m@data["lead"]; names(y1) <- "y.3"
y4 <- m4m@data["zinc"]; names(y2) <- "y.4"
# Creating the stack data for the cadmium
stk.cadm <- inla.stack(
data = list(y = cbind(as.vector(y1), y.2 = NA, y.3 = NA, y.4 = NA)),
A = list(A.m),
effects = list(list(Intercept.1 = 1, spatial.field1 = s.index1)),
tag = "cadmium")
# Creating the stack data for the cadmium
stk.cadm <- inla.stack(
data = list(y = cbind(as.vector(y1), NA,  NA, NA)),
A = list(A.m),
effects = list(list(Intercept.1 = 1, spatial.field1 = s.index1)),
tag = "cadmium")
################################################################################
############## Multivariate geostatistical analysis using R-INLA ###############
##################################################################### 13/02/2020
# In this script, an example of concentrations of the four heavy metals
# belonging to the meuse river data (sp package) is analysed using R-INLA
#Loading necessary packages
library(sp)
library(INLA)
library(maptools)
library(spatstat)
library(rgeos)
library(RColorBrewer)
library(ggmap)
library(rgdal)
library(gstat)
# Loading the data
data(meuse); str(meuse)
# Selecting the four the metals (cadmium, cooper, lead and zinc) and
# the coordinates of the measurements.
m4m <- meuse[, c(1, 2, 3, 4, 5, 6)]; rm(meuse); str(m4m)
# Creating the spatial object
coordinates(m4m) = ~x+y
proj4string(m4m) <- CRS("+init=epsg:28992")
# Creating the mesh
mesh.coor <- inla.mesh.2d(loc = coordinates(m4m),
max.edge = c(250, 500),
offset = c(250, 500),
n=c(32, 32))
plot(mesh.coor, xlab="Using coordinates")
points(coordinates(m4m), col="blue" )
# Number of vertices (nodes) of the mesh
nv <- mesh.coor$n
# Create spde model object
spde <- inla.spde2.matern(mesh = mesh.coor, alpha=2, constr = TRUE)
# Creating the index for the spatial effects
s.index1 <- inla.spde.make.index(name = "spatial.field1", n.spde = spde$n.spde)
s.index2 <- inla.spde.make.index(name = "spatial.field2", n.spde = spde$n.spde)
s.index3 <- inla.spde.make.index(name = "spatial.field3", n.spde = spde$n.spde)
s.index4 <- inla.spde.make.index(name = "spatial.field4", n.spde = spde$n.spde)
# Creating the projector matrix
A.m <- inla.spde.make.A(mesh= mesh.coor, loc = coordinates(m4m))
# Preparing the stack data
y1 <- m4m@data["cadmium"]; names(y1) <- "y.1"
y2 <- m4m@data["copper"]; names(y2) <- "y.2"
y3 <- m4m@data["lead"]; names(y1) <- "y.3"
y4 <- m4m@data["zinc"]; names(y2) <- "y.4"
# Creating the stack data for the cadmium
stk.cadm <- inla.stack(
data = list(y = cbind(as.vector(y1), NA,  NA, NA)),
A = list(A.m),
effects = list(list(Intercept.1 = 1, spatial.field1 = s.index1)),
tag = "cadmium")
################################################################################
############## Multivariate geostatistical analysis using R-INLA ###############
##################################################################### 13/02/2020
# In this script, an example of concentrations of the four heavy metals
# belonging to the meuse river data (sp package) is analysed using R-INLA
#Loading necessary packages
library(sp)
library(INLA)
library(maptools)
library(spatstat)
library(rgeos)
library(RColorBrewer)
library(ggmap)
library(rgdal)
library(gstat)
# Loading the data
data(meuse); str(meuse)
# Selecting the four the metals (cadmium, cooper, lead and zinc) and
# the coordinates of the measurements.
m4m <- meuse[, c(1, 2, 3, 4, 5, 6)]; rm(meuse); str(m4m)
# Creating the spatial object
coordinates(m4m) = ~x+y
proj4string(m4m) <- CRS("+init=epsg:28992")
# Creating the mesh
mesh.coor <- inla.mesh.2d(loc = coordinates(m4m),
max.edge = c(250, 500),
offset = c(250, 500),
n=c(32, 32))
plot(mesh.coor, xlab="Using coordinates")
points(coordinates(m4m), col="blue" )
# Number of vertices (nodes) of the mesh
nv <- mesh.coor$n
# Create spde model object
spde <- inla.spde2.matern(mesh = mesh.coor, alpha=2, constr = TRUE)
# Creating the index for the spatial effects
s.index1 <- inla.spde.make.index(name = "spatial.field1", n.spde = spde$n.spde)
s.index2 <- inla.spde.make.index(name = "spatial.field2", n.spde = spde$n.spde)
s.index3 <- inla.spde.make.index(name = "spatial.field3", n.spde = spde$n.spde)
s.index4 <- inla.spde.make.index(name = "spatial.field4", n.spde = spde$n.spde)
# Creating the projector matrix
A.m <- inla.spde.make.A(mesh= mesh.coor, loc = coordinates(m4m))
# Preparing the stack data
y1 <- m4m@data["cadmium"]; names(y1) <- "y.1"
y2 <- m4m@data["copper"]; names(y2) <- "y.2"
y3 <- m4m@data["lead"]; names(y3) <- "y.3"
y4 <- m4m@data["zinc"]; names(y4) <- "y.4"
# Creating the stack data for the cadmium
stk.cadm <- inla.stack(
data = list(y = cbind(as.vector(y1), y.2 = NA, y.3 = NA, y.4 = NA)),
A = list(A.m),
effects = list(list(Intercept.1 = 1, spatial.field1 = s.index1)),
tag = "cadmium")
# Creating the stack data for the copper
stk.copp <- inla.stack(
data = list(y = cbind(y.1 = NA, as.vector(y2), y.3 = NA, y.4 = NA)),
A = list(A.m),
effects = list(list(Intercept.2 = 1, base.copy.2 = 1:nv,
spatial.field2 = s.index2)),
tag = "copper")
# Creating the stack data for the lead
stk.lead <- inla.stack(
data = list(y = cbind(y.1 = NA, y.2 = NA, as.vector(y3), y.4 = NA)),
A = list(A.m),
effects = list(list(Intercept.3 = 1, base.copy.3 = 1:nv,
spatial.field3 = s.index3)),
tag = "lead")
# Creating the stack data for the zinc
stk.zinc <- inla.stack(
data = list(y = cbind(y.1 = NA, y.2 = NA, y.3 = NA, as.vector(y4))),
A = list(A.m),
effects = list(list(Intercept.4 = 1, base.copy.4 = 1:nv,
spatial.field4 = s.index4)),
tag = "zinc")
# Loading data for prediction
data(meuse.grid)
# Creating spatial object of the prediction data
coordinates(meuse.grid) <- ~x+y
proj4string(meuse.grid) <- CRS("+init=epsg:28992")
gridded(meuse.grid) <- TRUE
# Creating the projector matrix for the prediction
A.pr <- inla.spde.make.A(mesh= mesh.coor, loc = coordinates(meuse.grid))
# Preparing the data for the prediction
y5 <- matrix(NA, ncol= 1, nrow = nrow(meuse.grid) ) ; colnames(y5) <- names(y1)
y6 <- matrix(NA, ncol= 1, nrow = nrow(meuse.grid) ) ; colnames(y6) <- names(y2)
y7 <- matrix(NA, ncol= 1, nrow = nrow(meuse.grid) ) ; colnames(y7) <- names(y3)
y8 <- matrix(NA, ncol= 1, nrow = nrow(meuse.grid) ) ; colnames(y8) <- names(y4)
# Predicting stack for the cadmium
stk.cadm.pr <- inla.stack(
data = list( y = cbind(as.vector(y5), NA, NA, NA)),
A = list(A.pr),
effects = list(list(Intercept.1 = 1, spatial.field1 = s.index1)),
tag = "cadm.pred")
# Predicting stack for the copper
stk.copp.pr <- inla.stack(
data = list(y = cbind(NA, as.vector(y6), NA, NA)),
A = list(A.pr),
effects = list(list(Intercept.2 = 1, base.copy.2 = 1:nv,
spatial.field2 = s.index2)),
tag = "copp.pred")
# Predicting stack for the lead
stk.lead.pr <- inla.stack(
data = list(y = cbind(NA, NA, as.vector(y7), NA)),
A = list(A.pr),
effects = list(list(Intercept.3 = 1, base.copy.3 = 1:nv,
spatial.field3 = s.index3)),
tag = "lead.pred")
# Predicting stack for the zinc
stk.zinc.pr <- inla.stack(
data = list(y = cbind(NA, NA, NA, as.vector(y8))),
A = list(A.pr),
effects = list(list(Intercept.4 = 1, base.copy.4 = 1:nv,
spatial.field4 = s.index4)),
tag = "zinc.pred")
# Putting all the stack together
join.stack <- inla.stack(stk.cadm, stk.copp, stk.lead, stk.zinc,
stk.cadm.pr, stk.copp.pr, stk.lead.pr, stk.zinc.pr)
# Building the formula
form <- log(y) ~ -1 + Intercept.1 + Intercept.2 + Intercept.3 + Intercept.4 +
f(spatial.field1, model = spde) +
f(spatial.field2, model = spde) +
f(base.copy.2, copy = "spatial.field1", fixed = TRUE) +
f(spatial.field3, model = spde) +
f(base.copy.3, copy = "spatial.field1", fixed = TRUE) +
f(spatial.field4, model = spde) +
f(base.copy.4, copy = "spatial.field1", fixed = TRUE)
# Estimation
t1 <-Sys.time()
m4m.res <- inla(formula=form,
data = inla.stack.data(join.stack, spde = spde),
family = rep("gaussian", 4),
control.predictor = list(A = inla.stack.A(join.stack), compute = TRUE),
control.compute = list(dic=TRUE, waic=TRUE, cpo=TRUE, mlik=TRUE, po=TRUE))#
t2 <-Sys.time()
# Summary of the results
summary(m4m.res)
# Computing time
ti <- t2-t1; print(paste0("Model with four metals has used ", ti, " cpu time. And have finished at ", Sys.time()))
# Creatting palletes to plot
blu <- brewer.pal(9, "Blues");    blu <- colorRampPalette(blu)(20);
ora <- brewer.pal(9, "Oranges");  ora <- colorRampPalette(ora)(20);
gre <- brewer.pal(9, "Greys");    gre <- colorRampPalette(gre)(20);
# Extracting the index for plotting cadmium prediction
idx.cadm <- inla.stack.index(join.stack, 'cadm.pred')$data
meuse.grid$cadm.pr <- m4m.res$summary.fitted.values[idx.cadm, "mean"]
# Extracting the index for plotting copper prediction
idx.copp <- inla.stack.index(join.stack, 'copp.pred')$data
meuse.grid$copp.pr <- m4m.res$summary.fitted.values[idx.copp, "mean"]
# Extracting the index for plotting lead prediction
idx.lead <- inla.stack.index(join.stack, 'lead.pred')$data
meuse.grid$lead.pr <- m4m.res$summary.fitted.values[idx.lead, "mean"]
# Extracting the index for plotting zinc prediction
idx.zinc <- inla.stack.index(join.stack, 'zinc.pred')$data
meuse.grid$zinc.pr <- m4m.res$summary.fitted.values[idx.zinc, "mean"]
# Plotting posterior estimation of both metals
spplot(meuse.grid, c("cadm.pr","copp.pr","lead.pr", "zinc.pr"), col.regions=gre,
ylab="Estimations of the intensity",
main = c("Cadmium", "Copper", "Lead", "Zinc"))
c(NA, c(1,2,3), NA, NA)
m4m@data["cadmium"]
m4m@data["cadmium"]
m4m@data["copper"]
dim(m4m@data)
dim(m4m@data)[1]
#Vector of n NAs
v.NA <- rep(NA, length(dim(m4m@data)[1]))
################################################################################
############## Multivariate geostatistical analysis using R-INLA ###############
##################################################################### 13/02/2020
# In this script, an example of concentrations of the four heavy metals
# belonging to the meuse river data (sp package) is analysed using R-INLA
#Loading necessary packages
library(sp)
library(INLA)
library(maptools)
library(spatstat)
library(rgeos)
library(RColorBrewer)
library(ggmap)
library(rgdal)
library(gstat)
# Loading the data
data(meuse); str(meuse)
# Selecting the four the metals (cadmium, cooper, lead and zinc) and
# the coordinates of the measurements.
m4m <- meuse[, c(1, 2, 3, 4, 5, 6)]; rm(meuse); str(m4m)
# Creating the spatial object
coordinates(m4m) = ~x+y
proj4string(m4m) <- CRS("+init=epsg:28992")
# Creating the mesh
mesh.coor <- inla.mesh.2d(loc = coordinates(m4m),
max.edge = c(250, 500),
offset = c(250, 500),
n=c(32, 32))
plot(mesh.coor, xlab="Using coordinates")
points(coordinates(m4m), col="blue" )
# Number of vertices (nodes) of the mesh
nv <- mesh.coor$n
# Create spde model object
spde <- inla.spde2.matern(mesh = mesh.coor, alpha=2, constr = TRUE)
# Creating the index for the spatial effects
s.index1 <- inla.spde.make.index(name = "spatial.field1", n.spde = spde$n.spde)
s.index2 <- inla.spde.make.index(name = "spatial.field2", n.spde = spde$n.spde)
s.index3 <- inla.spde.make.index(name = "spatial.field3", n.spde = spde$n.spde)
s.index4 <- inla.spde.make.index(name = "spatial.field4", n.spde = spde$n.spde)
# Creating the projector matrix
A.m <- inla.spde.make.A(mesh= mesh.coor, loc = coordinates(m4m))
#Vector of n NAs
v.NA <- rep(NA, length(dim(m4m@data)[1]))
# Preparing the stack data
y1.prev <- m4m@data["cadmium"]
y1 <- c(as.vector(y1.prev), v.NA, v.NA, v.NA); names(y1) <- "y.1"
y2.prev <- m4m@data["copper"]
y2 <- c(v.NA, as.vector(y2.prev), v.NA, v.NA); names(y2) <- "y.2"
y3.prev <- m4m@data["lead"]
y3 <- c(v.NA, v.NA, as.vector(y3.prev), v.NA); names(y3) <- "y.3"
y4.prev <- m4m@data["zinc"]
y4 <- c(v.NA, v.NA, v.NA, as.vector(y4.prev)); names(y4) <- "y.4"
# Creating the stack data for the cadmium
stk.cadm <- inla.stack(
data = list(y = cbind(y1, y.2 = NA, y.3 = NA, y.4 = NA)),
A = list(A.m),
effects = list(list(Intercept.1 = 1, spatial.field1 = s.index1)),
tag = "cadmium")
# Creating the stack data for the copper
stk.copp <- inla.stack(
data = list(y = cbind(y.1 = NA, y2, y.3 = NA, y.4 = NA)),
A = list(A.m),
effects = list(list(Intercept.2 = 1, base.copy.2 = 1:nv,
spatial.field2 = s.index2)),
tag = "copper")
# Creating the stack data for the lead
stk.lead <- inla.stack(
data = list(y = cbind(y.1 = NA, y.2 = NA, y3, y.4 = NA)),
A = list(A.m),
effects = list(list(Intercept.3 = 1, base.copy.3 = 1:nv,
spatial.field3 = s.index3)),
tag = "lead")
# Creating the stack data for the zinc
stk.zinc <- inla.stack(
data = list(y = cbind(y.1 = NA, y.2 = NA, y.3 = NA, y4)),
A = list(A.m),
effects = list(list(Intercept.4 = 1, base.copy.4 = 1:nv,
spatial.field4 = s.index4)),
tag = "zinc")
# Loading data for prediction
data(meuse.grid)
# Creating spatial object of the prediction data
coordinates(meuse.grid) <- ~x+y
proj4string(meuse.grid) <- CRS("+init=epsg:28992")
gridded(meuse.grid) <- TRUE
# Creating the projector matrix for the prediction
A.pr <- inla.spde.make.A(mesh= mesh.coor, loc = coordinates(meuse.grid))
# Preparing the data for the prediction
y5 <- matrix(NA, ncol= 1, nrow = 4*nrow(meuse.grid) ) ; colnames(y5) <- names(y1)
y6 <- matrix(NA, ncol= 1, nrow = 4*nrow(meuse.grid) ) ; colnames(y6) <- names(y2)
y7 <- matrix(NA, ncol= 1, nrow = 4*nrow(meuse.grid) ) ; colnames(y7) <- names(y3)
y8 <- matrix(NA, ncol= 1, nrow = 4*nrow(meuse.grid) ) ; colnames(y8) <- names(y4)
# Predicting stack for the cadmium
stk.cadm.pr <- inla.stack(
data = list( y = cbind(as.vector(y5), NA, NA, NA)),
A = list(A.pr),
effects = list(list(Intercept.1 = 1, spatial.field1 = s.index1)),
tag = "cadm.pred")
# Predicting stack for the copper
stk.copp.pr <- inla.stack(
data = list(y = cbind(NA, as.vector(y6), NA, NA)),
A = list(A.pr),
effects = list(list(Intercept.2 = 1, base.copy.2 = 1:nv,
spatial.field2 = s.index2)),
tag = "copp.pred")
# Predicting stack for the lead
stk.lead.pr <- inla.stack(
data = list(y = cbind(NA, NA, as.vector(y7), NA)),
A = list(A.pr),
effects = list(list(Intercept.3 = 1, base.copy.3 = 1:nv,
spatial.field3 = s.index3)),
tag = "lead.pred")
# Predicting stack for the zinc
stk.zinc.pr <- inla.stack(
data = list(y = cbind(NA, NA, NA, as.vector(y8))),
A = list(A.pr),
effects = list(list(Intercept.4 = 1, base.copy.4 = 1:nv,
spatial.field4 = s.index4)),
tag = "zinc.pred")
# Putting all the stack together
join.stack <- inla.stack(stk.cadm, stk.copp, stk.lead, stk.zinc,
stk.cadm.pr, stk.copp.pr, stk.lead.pr, stk.zinc.pr)
# Building the formula
form <- log(y) ~ -1 + Intercept.1 + Intercept.2 + Intercept.3 + Intercept.4 +
f(spatial.field1, model = spde) +
f(spatial.field2, model = spde) +
f(base.copy.2, copy = "spatial.field1", fixed = TRUE) +
f(spatial.field3, model = spde) +
f(base.copy.3, copy = "spatial.field1", fixed = TRUE) +
f(spatial.field4, model = spde) +
f(base.copy.4, copy = "spatial.field1", fixed = TRUE)
# Estimation
t1 <-Sys.time()
m4m.res <- inla(formula=form,
data = inla.stack.data(join.stack, spde = spde),
family = rep("gaussian", 4),
control.predictor = list(A = inla.stack.A(join.stack), compute = TRUE),
control.compute = list(dic=TRUE, waic=TRUE, cpo=TRUE, mlik=TRUE, po=TRUE))#
t2 <-Sys.time()
# Summary of the results
summary(m4m.res)
# Computing time
ti <- t2-t1; print(paste0("Model with four metals has used ", ti, " cpu time. And have finished at ", Sys.time()))
# Creatting palletes to plot
blu <- brewer.pal(9, "Blues");    blu <- colorRampPalette(blu)(20);
ora <- brewer.pal(9, "Oranges");  ora <- colorRampPalette(ora)(20);
gre <- brewer.pal(9, "Greys");    gre <- colorRampPalette(gre)(20);
# Extracting the index for plotting cadmium prediction
idx.cadm <- inla.stack.index(join.stack, 'cadm.pred')$data
meuse.grid$cadm.pr <- m4m.res$summary.fitted.values[idx.cadm, "mean"]
# Extracting the index for plotting copper prediction
idx.copp <- inla.stack.index(join.stack, 'copp.pred')$data
meuse.grid$copp.pr <- m4m.res$summary.fitted.values[idx.copp, "mean"]
# Extracting the index for plotting lead prediction
idx.lead <- inla.stack.index(join.stack, 'lead.pred')$data
meuse.grid$lead.pr <- m4m.res$summary.fitted.values[idx.lead, "mean"]
# Extracting the index for plotting zinc prediction
idx.zinc <- inla.stack.index(join.stack, 'zinc.pred')$data
meuse.grid$zinc.pr <- m4m.res$summary.fitted.values[idx.zinc, "mean"]
# Plotting posterior estimation of both metals
spplot(meuse.grid, c("cadm.pr","copp.pr","lead.pr", "zinc.pr"), col.regions=gre,
ylab="Estimations of the intensity",
main = c("Cadmium", "Copper", "Lead", "Zinc"))
#Loading necessary packages
library(sp)
library(INLA)
library(maptools)
library(spatstat)
library(rgeos)
library(RColorBrewer)
library(ggmap)
library(rgdal)
library(gstat)
# Loading the data
data(meuse); str(meuse)
# Selecting the four the metals (cadmium, cooper, lead and zinc) and
# the coordinates of the measurements.
m4m <- meuse[, c(1, 2, 3, 4, 5, 6)]; rm(meuse); str(m4m)
# Creating the spatial object
coordinates(m4m) = ~x+y
proj4string(m4m) <- CRS("+init=epsg:28992")
plot(mesh.coor, xlab="Using coordinates")
# Creating the mesh
mesh.coor <- inla.mesh.2d(loc = coordinates(m4m),
max.edge = c(250, 500),
offset = c(250, 500),
n=c(32, 32))
points(coordinates(m4m), col="blue" )
# Number of vertices (nodes) of the mesh
nv <- mesh.coor$n
# Create spde model object
spde <- inla.spde2.matern(mesh = mesh.coor, alpha=2, constr = TRUE)
# Creating the index for the spatial effects
s.index1 <- inla.spde.make.index(name = "spatial.field1", n.spde = spde$n.spde)
s.index2 <- inla.spde.make.index(name = "spatial.field2", n.spde = spde$n.spde)
s.index3 <- inla.spde.make.index(name = "spatial.field3", n.spde = spde$n.spde)
s.index4 <- inla.spde.make.index(name = "spatial.field4", n.spde = spde$n.spde)
# Creating the projector matrix
A.m <- inla.spde.make.A(mesh= mesh.coor, loc = coordinates(m4m))
#Vector of n NAs
v.NA <- rep(NA, length(dim(m4m@data)[1]))
# Preparing the stack data
y1.prev <- m4m@data["cadmium"]
y1 <- c(as.vector(y1.prev), v.NA, v.NA, v.NA); names(y1) <- "y.1"
y2.prev <- m4m@data["copper"]
y2 <- c(v.NA, as.vector(y2.prev), v.NA, v.NA); names(y2) <- "y.2"
y3.prev <- m4m@data["lead"]
y3 <- c(v.NA, v.NA, as.vector(y3.prev), v.NA); names(y3) <- "y.3"
y4.prev <- m4m@data["zinc"]
y4 <- c(v.NA, v.NA, v.NA, as.vector(y4.prev)); names(y4) <- "y.4"
# Creating the stack data for the cadmium
stk.cadm <- inla.stack(
data = list(y = cbind(y1, y.2 = NA, y.3 = NA, y.4 = NA)),
A = list(A.m),
effects = list(list(Intercept.1 = 1, spatial.field1 = s.index1)),
tag = "cadmium")
